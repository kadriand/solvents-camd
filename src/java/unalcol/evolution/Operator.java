/*
 * <copyright>
 *  Copyright 2004-2005 (Jonatan Gomez Solutions JG-Sol)
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the unalcol Open Source License as published by
 *  UN-Data Mining Group on the unalcol Open Source Website
 *  (http://dis.unal.edu.co/profesores/jgomez/projects/unalcol/index.htm).
 *
 *  THE unalcol SOFTWARE AND ANY DERIVATIVE SUPPLIED BY LICENSOR IS
 *  PROVIDED "AS IS" WITHOUT WARRANTIES OF ANY KIND, WHETHER EXPRESS OR
 *  IMPLIED, INCLUDING (BUT NOT LIMITED TO) ALL IMPLIED WARRANTIES OF
 *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE, AND WITHOUT
 *  ANY WARRANTIES AS TO NON-INFRINGEMENT.  IN NO EVENT SHALL COPYRIGHT
 *  HOLDER BE LIABLE FOR ANY DIRECT, SPECIAL, INDIRECT OR CONSEQUENTIAL
 *  DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE OF DATA OR PROFITS,
 *  TORTIOUS CONDUCT, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 *  PERFORMANCE OF THE unalcol SOFTWARE.
 *
 * </copyright>
 */
package unalcol.evolution;

import java.util.Vector;

/**
 * <p>Title: Operator</p>
 * <p>Description: An abstract version of a genetic operator.</p>
 * <p>Copyright: Copyright (c) 2004</p>
 * <p>Company: Universidad Nacional de Colombia</p>
 *
 * @author Jonatan Gomez
 * @version 1.0
 */
public abstract class Operator {
    /**
     * Environment of the genetic operator
     */
    protected Environment environment;

    /**
     * Constructor: Create a genetic operator with arity equal one
     */
    public Operator(Environment environment) {
        this.environment = environment;
    }

    /**
     * Apply the operator over the given individuals
     *
     * @param population Source population
     * @param x          Individual used as first parent
     * @return A collection of individuals generated by the operator
     */
    public abstract Vector<Individual> apply(Population population, int x);

    /**
     * Return the genetic operator arity
     *
     * @return the genetic operator arity
     */
    public abstract int getArity();

    /**
     * Returns the enviroment
     *
     * @return The enviroment of the genetic operator
     */
    public Environment getEnvironment() {
        return environment;
    }

    /**
     * Sets the enviroment
     *
     * @param environment The enviroment of the genetic operator
     */
    public void setEnvironment(Environment environment) {
        this.environment = environment;
    }

}
